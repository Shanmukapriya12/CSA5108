#include <stdio.h>
#include <string.h>
#include <ctype.h>

void encrypt(char *plaintext, char *key, char *ciphertext) {
    int textLen = strlen(plaintext);
    int keyLen = strlen(key);
    
    for (int i = 0, j = 0; i < textLen; i++) {
        char ch = plaintext[i];
        if (isalpha(ch)) {
            int shift = toupper(key[j % keyLen]) - 'A';
            char base = isupper(ch) ? 'A' : 'a';
            ciphertext[i] = (ch - base + shift) % 26 + base;
            j++;
        } else {
            ciphertext[i] = ch;
        }
    }
    ciphertext[textLen] = '\0';
}

void decrypt(char *ciphertext, char *key, char *plaintext) {
    int textLen = strlen(ciphertext);
    int keyLen = strlen(key);
    
    for (int i = 0, j = 0; i < textLen; i++) {
        char ch = ciphertext[i];
        if (isalpha(ch)) {
            int shift = toupper(key[j % keyLen]) - 'A';
            char base = isupper(ch) ? 'A' : 'a';
            plaintext[i] = (ch - base - shift + 26) % 26 + base;
            j++;
        } else {
            plaintext[i] = ch;
        }
    }
    plaintext[textLen] = '\0';
}

int main() {
    char plaintext[100], key[100], ciphertext[100], decrypted[100];

    printf("Enter plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = 0; // remove newline

    printf("Enter key (A-Z): ");
    fgets(key, sizeof(key), stdin);
    key[strcspn(key, "\n")] = 0;

    encrypt(plaintext, key, ciphertext);
    printf("Encrypted text: %s\n", ciphertext);

    decrypt(ciphertext, key, decrypted);
    printf("Decrypted text: %s\n", decrypted);

    return 0;
}
