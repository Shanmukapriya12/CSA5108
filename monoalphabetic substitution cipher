#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 26

// Substitute key: maps A-Z to QWERTY... format (example)
char key[SIZE] = {
    'Q','W','E','R','T','Y','U','I','O','P','A','S','D',
    'F','G','H','J','K','L','Z','X','C','V','B','N','M'
};

// Function to encrypt using the monoalphabetic cipher
void encrypt(char *plaintext, char *ciphertext) {
    for (int i = 0; plaintext[i] != '\0'; i++) {
        if (isalpha(plaintext[i])) {
            char ch = toupper(plaintext[i]);
            ciphertext[i] = key[ch - 'A'];
        } else {
            ciphertext[i] = plaintext[i];  // keep space/punctuation
        }
    }
}

// Function to decrypt the ciphertext
void decrypt(char *ciphertext, char *plaintext) {
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            char ch = toupper(ciphertext[i]);
            for (int j = 0; j < SIZE; j++) {
                if (key[j] == ch) {
                    plaintext[i] = 'A' + j;
                    break;
                }
            }
        } else {
            plaintext[i] = ciphertext[i];
        }
    }
}

int main() {
    char plaintext[100], ciphertext[100] = {0}, decrypted[100] = {0};

    printf("Enter plaintext (uppercase or lowercase): ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = 0; // remove newline

    encrypt(plaintext, ciphertext);
    printf("Encrypted text: %s\n", ciphertext);

    decrypt(ciphertext, decrypted);
    printf("Decrypted text: %s\n", decrypted);

    return 0;
}
